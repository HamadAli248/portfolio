{"version":3,"sources":["components/landingpage.js","components/skills.js","components/aboutme.js","components/contactme.js","components/projectLanuages/projectCard.js","components/projectLanuages/ReactProjects.js","components/projectLanuages/VanillaJavaScript.js","components/projectLanuages/BasicChallenges.js","components/projectLanuages/BasicChallangesInJava.js","components/projectLanuages/JavaProjects.js","components/projectLanuages/MongoDB.js","components/projects.js","components/main.js","App.js","serviceWorker.js","index.js","GBuster.jpg","HamadAliCV.pdf"],"names":["Landing","style","width","margin","className","col","src","Profile","alt","href","rel","target","aria-hidden","Component","Skills","display","this","props","skill","progress","About","textAlign","height","paddingTop","color","borderTop","Contact","class","fontSize","fontFamily","ProjectCard","shadow","minWidth","background","imgmyUrl","cardText","border","GithubbuttonText","colored","livebuttonText","name","ReactProjects","VanillaJavaScript","urlChallenge","urlDom","BasicChallenges","urlJavalogo","BasicChallengesInJava","urlCalculator","JavaProjects","MongoDb","Projects","state","activeTab","onChange","tabId","setState","ripple","toggleCategories","Main","exact","path","component","LandingPage","AboutMe","Project","Resume","App","landingPage","title","textDecoration","to","scroll","CV","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.fb7ad286.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Grid,Cell} from 'react-mdl';\nimport Profile from '../GBuster.jpg';\n\nclass Landing extends Component {\n    render() {\n\n        // code for the main landing page\n        return(\n            <div style={{width: '100%', margin: 'auto'}}>\n            <Grid className=\"landing-grid\">\n                <Cell col={12}>\n\n                    {/* Profile Image and name */}\n                    <img \n                    src={Profile} alt=\"Profile\" \n                    className=\"avatar-img\"/>\n                    <div className=\"banner-text\"> \n                    <h1>Junior Software Engineer</h1>\n\n\n\n\n                    {/* Links for Socail Media */}\n                    <div className=\"social-links\">\n                        {/*Linkin*/}\n                        <a href=\"https://www.linkedin.com/in/hamad-ali-5069b518a/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                            <i className=\"fa fa-linkedin-square\"  aria-hidden=\"true\"/>\n                        </a>\n                        {/*Github*/}\n                        <a href=\"https://github.com/HamadAli248\" rel=\"noopener noreferrer\" target=\"_blank\">\n                            <i className=\"fa fa-github-square\"  aria-hidden=\"true\"/>\n                        </a>\n                        {/*free code camp*/}\n                        <a href=\"https://www.freecodecamp.org/fcc8eef0fcb-973d-4c54-bba3-c0fc28b43bb7\" rel=\"noopener noreferrer\" target=\"_blank\">\n                            <i className=\"fa fa-free-code-camp\"  aria-hidden=\"true\"/>\n                        </a>\n                    </div>\n                    </div>\n                </Cell>\n            </Grid>\n            </div>\n            \n        )\n    }\n}\nexport default Landing;","import React, { Component } from 'react';\nimport { Grid, Cell , ProgressBar } from 'react-mdl';\n\nclass Skills extends Component {\n    render() {\n        // code for skills (used in about me) ---- reduce repeated code \n        return(\n            <Grid >\n                <Cell col={12}>\n\n                    {/* sill name : and precentage of knowledge */}\n                    <div style={{display: 'flex' }}>{this.props.skill} <ProgressBar style={{margin: 'auto' , width: '75%', }} progress={this.props.progress}/></div>\n                </Cell>\n            </Grid>\n        )\n    }\n}\nexport default Skills;","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport Profile from '../GBuster.jpg';\nimport Skills from './skills';\n\nclass About extends Component {\n    render() {\n        return(\n\n            // About me page \n            <div>\n                <Grid>\n                    {/* splitting the page into 2 sections(will be in grid so it splits into 4:8) */}\n                    \n                    <Cell col={4}>\n                        {/* content of left side of the page */}\n\n                        {/* Picture,Name and JobTitle */}\n                        <div style={{textAlign: 'center'}}>\n                        <img\n                            src={Profile}\n                            alt=\"profile pic\"\n                            style={{ height:'200px' }}/>\n                        </div>\n                        <h2 style={{paddingTop: '2em'}}>Hamad Ali</h2>\n                        <h4 style={{color: 'grey'}}>Software Engineer</h4>\n                        \n                        {/* Botom left of page of all the skills and {percentage of knowledge} code writen in skills.js file */}\n                        <h2>Skills</h2>  \n                        <Skills className=\"skill\"\n                        skill=\"HTML/CSS\"\n                        progress={90}/> \n                        <Skills className=\"skill\"\n                        skill=\"JAVA\"\n                        progress={80}/>   \n                        <Skills className=\"skill\"\n                        skill=\"JavaScript\"\n                        progress={85}/> \n                        <Skills className=\"skill\"\n                        skill=\"React\"\n                        progress={75}/>\n                        <Skills className=\"skill\"\n                        skill=\"Swift\"\n                        progress={30}/>   \n                        <Skills className=\"skill\"\n                        skill=\"NodeJS\"\n                        progress={20}/> \n                                           \n                    </Cell>\n\n                    {/* content of right side of the page */}\n                    <Cell className=\"aboutme-right-col\" col={8}> \n                    {/* About me section top right */}\n                    <h2>About Me</h2>\n                           <p>Currently enrolled onto the 12-week training at Code Nation, Manchester. \n                           I am learning Front-End development including HTML5, CSS3, JavaScript,\n                           React, Back-End programming such as APIs, Node.JS, Mongo. DB, MySQL, Express, \n                           iOS Swift programming and using the terminal and command line, using git and git hub.\n                           I am looking to use the skills I have learnt to help develop my career by earning an\n                           apprenticeship so I can return to Code Nation and improve my knowledge further.</p>     \n\n                     <hr style={{borderTop: '3px solid #e22947'}}/>\n\n\n                   \n                     {/* Bottom right with all the Certifications */}\n\n                        <h2>Certification</h2>\n\n                        <a href=\"https://www.sololearn.com/Certificate/1014-13208616/pdf/\" target=\"_blank\">HTML Fundamentals course</a> <br></br>    \n                        <a href=\"https://www.sololearn.com/Certificate/1023-13208616/pdf/\" target=\"_blank\">CSS Fundamentals course </a> <br></br>    \n                        <a href=\"https://www.sololearn.com/Certificate/1024-13208616/pdf/\" target=\"_blank\">JavaScript Tutorial course</a> <br></br> \n                        <a href=\"https://www.sololearn.com/Certificate/1068-13208616/pdf/\" target=\"_blank\"> Java Tutorial course </a> <br></br>       \n                        <a href=\"https://www.freecodecamp.org/certification/fcc8eef0fcb-973d-4c54-bba3-c0fc28b43bb7/responsive-web-design\" target=\"_blank\">Responsive Web Design</a><br></br>\n                        <a href=\"https://certification.microsoft.com/badge\" target=\"_blank\">Microsoft Exam 480: Programming in HTML5 with JavaScript and CSS3</a><br></br>\n\n\n                    </Cell>\n                </Grid>\n                \n            </div>\n        )\n    }\n}\nexport default About;","import React, { Component } from 'react';\nimport { Grid , Cell , List , ListItem , ListItemContent , } from 'react-mdl';\nimport Profile from '../GBuster.jpg';\n\nclass Contact extends Component {\n    render() {\n        return(\n\n            // contact page\n            <div className=\"contact-body\">\n                <Grid className=\"contact-grid\">\n                    {/* Splitting the page into 2 with cell */}\n\n                    {/* Right side of page with picture and name */}\n                    <Cell col={6}> \n                        <h2 class=\"name\">HAMAD ALI</h2>\n                        <img class=\"picture\"\n                         src={Profile}\n                          alt=\"profile pic\"\n                          style={{ height:'250px' }}/>\n                    </Cell>\n\n                  \n                  \n                  \n                    {/* Left Side Of the page with contact details */}\n                    <Cell col={6}> \n                        <h2>Contact Me</h2>\n                        <hr/>\n                        <div className=\"contact-list\">\n                            <List>\n                                <ListItem>\n                                    <ListItemContent style={{fontSize: '30px', fontFamily:'Anton'}}>\n                                        <div class=\"contact-info\">\n                                        <i class=\"font\" className=\"fa fa-phone-square\" aria-hidden=\"true\"/>\n                                        <p>07424983269</p>\n                                        </div>\n                                    </ListItemContent>\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemContent style={{fontSize: '30px', fontFamily:'Anton'}}>\n                                        <div class=\"contact-info\">\n                                        <i class=\"font\" className=\"fa fa-envelope\" aria-hidden=\"true\"/>\n                                        <p>hammadali248@gmail.com</p>\n                                        </div>\n                                    </ListItemContent>\n                                </ListItem>\n                            </List>\n                        </div>\n                    </Cell>\n                </Grid>\n                \n            </div>\n        )\n    }\n}\nexport default Contact;","import React, { Component } from 'react';\nimport {Card , CardText , CardTitle , CardActions , Button , CardMenu , IconButton} from 'react-mdl';\n\nclass ProjectCard extends Component {\n    \n    //code for project cards  used in project.js file\n\n    render(props) {\n        return(\n            <Card className=\"project-grid\" shadow={5} style={{minWidth: '450' , margin: 'auto'}}>\n             <CardTitle style={{color:'black', height: '176px', background: 'url(' + this.props.imgmyUrl + ') center / cover'}}>\n             </CardTitle>\n             <CardText>\n                 {this.props.cardText}\n             </CardText>\n             <CardActions border>\n                <a href={this.props.GithubbuttonText}  target=\"_blank\"><Button colored >Git Hub</Button> </a>\n                <a href={this.props.livebuttonText}  target=\"_blank\"><Button colored>Live Demo</Button> </a>\n                 \n             </CardActions>\n             <CardMenu style={{color: 'black'}}>\n                 <IconButton name=\"share\" />\n             </CardMenu>\n             </Card>  \n        )\n    }\n}\n\nexport default ProjectCard;\n","import React from 'react';\nimport ProjectCard from './projectCard';\n\nlet urlinsta = \"https://s3.amazonaws.com/ionic-marketplace/instaclone-ionic-instagram-theme/icon.png\";\nlet urlTetris=\"https://editorial.designtaxi.com/editorial-images/news-logo11062019/1.png\";\nlet urlCodeEditor =\"https://cdn4.iconfinder.com/data/icons/flaturici-set-2/512/code-512.png\";\nlet urlBlog =\"https://www.revenuearchitects.com/wp-content/uploads/2017/02/Blog_pic-1030x584.png\";\nlet urlApi =\"https://pngimage.net/wp-content/uploads/2018/05/api-logo-png-4.png\";\nexport const ReactProjects = () =>\n                <div className=\"project-grid\">\n                    <ProjectCard\n                        imgmyUrl = {urlinsta}\n                        cardText=\"This was a group project working with react and building a copy of Instagram\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/insta\"\n                    />\n                    \n                    <ProjectCard\n                        imgmyUrl = {urlTetris}\n                        cardText=\"Tetris Game\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Tetris-Game\"\n                        livebuttonText=\"https://hamadali248.github.io/Tetris-Game/\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlCodeEditor}\n                        cardText=\"This was a group project working with react and building a Code Editor\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/cn-editor\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlBlog}\n                        cardText=\"Blog page Front-End with React\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Blog-Page\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlApi}\n                        cardText=\"Learning API with react\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/React-And-Api\"\n                    />\n                </div>\n    \n\n\n\n\n\n\n","import React from 'react';\nimport ProjectCard from './projectCard';\n\nlet urlDice=\"https://cdn1.vectorstock.com/i/1000x1000/34/10/dice-line-icon-gambling-outline-logo-vector-19733410.jpg\";\nlet urlPortfolio=\"https://www.happydesigner.co.uk/wp-content/uploads/2010/06/PortfolioMarketing-logo-1024x491.jpg\";\nlet urlKeyCode = \"https://img.icons8.com/pastel-glyph/2x/automotive-generator.png\"\nlet urlcalculator=\"https://coopervision.ca/sites/coopervision.ca/files/tc-calculator-icon.png?timestamp=1493161192\";\n\n\nexport const VanillaJavaScript = () =>   \n                    <div className=\"project-grid\">\n                    <ProjectCard\n                    imgmyUrl = {urlDice}\n                    cardText=\"First ever project built in Vanilla javascript, building a one and two player dice game.\"                \n                    GithubbuttonText=\"https://github.com/HamadAli248/dicegame\"\n                    livebuttonText=\"https://hamadali248.github.io/dicegame/\"\n                    />  \n                    <ProjectCard\n                        imgmyUrl = {urlcalculator}\n                        cardText=\"Calculator\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/calculator\"\n                        livebuttonText=\"https://hamadali248.github.io/calculator/\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlPortfolio}\n                        cardText=\"Basic Project of building my portfolio\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/portfolio\"\n                        livebuttonText=\"https://hamadali248.github.io/portfolio/\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlKeyCode}\n                        cardText=\"Key-Code-Generator Created in week 3 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Key-Code-Generator\"\n                        livebuttonText=\"https://hamadali248.github.io/Key-Code-Generator/\"\n                    />\n\n                    </div>","import React from 'react';\nimport ProjectCard from './projectCard';\n\nlet urlChallenge= \"https://www.w3schools.com/whatis/img_js.png\";\nlet urlCashMachine = \"https://static.thenounproject.com/png/2077124-200.png\";\nlet urlTicketMacine = \"https://cdn4.iconfinder.com/data/icons/train-commuter-station-subway/338/train-stations-002-512.png\";\nlet urlZenGarden = \"https://www.cognifide.com/-/media/project/cognifidecom/blogs/2016/touch-ui-dialog-conversion/zengarden_stacked_rgb-fb.png?la=en&hash=F037A801E1ECE351A12F720B8727DFAA\"\nlet urlDom=\"https://ourcodeworld.com/public-media/articles/articleocw-56bba37e791bc.png\"\n\nexport const BasicChallenges = () =>\n                <div className=\"project-grid\">\n                    <ProjectCard\n                        imgmyUrl = {urlCashMachine}\n                        cardText=\"Created a Cash-machine in week 2 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/carpark-challenge\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlTicketMacine}\n                        cardText=\"Created a car park ticket machine in week 2 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Cash-machine-challenges\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlZenGarden}\n                        cardText=\"Zen-Garden-CSS Challenge in week 3 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Zen-Garden-Css-Challenge\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"DOM Event Object in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/DOM-Event-Object\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"Dom addEventListener mouseover_out in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Dom-addEventListener-mouseover_out\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"DOM setTimeout in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Dom-setTimeout\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"Removing Elements in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/DOM-Removing-Elements\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"Creating-New-Elements-with-JS in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/DOM-Creating-New-Elements-with-JS\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"Styling-Elements-with-JS in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/DOM-Styling-Elements-with-JS\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"Changing Element Attributes in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/DOM-Changing-Element-Attributes\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"TextContent and innerHTML in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/DOM-textContent-and-innerHTML\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"Query-selector and querySelectorAll in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/DOM-querySelector-and-querySelectorAll\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"Selecting Elements of particular type in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/DOM-Selecting-Elements-of-particular-type\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"Selecting an element by its ID in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/DOM-Selecting-an-element-by-its-ID\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"Adding event Listener in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/DOM-Adding-event-Listener\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDom}\n                        cardText=\"Dom Using ParentNode in week 4 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Dom-Using-ParentNode\"\n                    />\n\n                    <ProjectCard\n                        imgmyUrl = {urlChallenge}\n                        cardText=\"Array challenges from week 1 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Array-Challenges\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlChallenge}\n                        cardText=\"Function-Challenges from week 1 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Function-Challenges\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlChallenge}\n                        cardText=\"If-else-Challenges from week 1 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/If-else-Challenges\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlChallenge}\n                        cardText=\"Variable-Challenges from week 1 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Variable-Challenges\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlChallenge}\n                        cardText=\"dot-notation-Challenges from week 1 of coding\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/dot-notation-Challenges\"                     \n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlChallenge}\n                        cardText=\"Learning how to hash passwords and then to check for the hashed password\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Hashing-Passwords\"                     \n                    />\n                    \n                </div>\n    \n\n\n\n\n\n\n","import React from 'react';\nimport ProjectCard from './projectCard';\nlet urlCashMachine = \"https://static.thenounproject.com/png/2077124-200.png\";\nlet urlJavalogo = \"https://p7.hiclipart.com/preview/837/18/530/logo-java-runtime-environment-programming-language-runtime-system-oracle.jpg\";\nlet urlDataBase=\"https://img.favpng.com/21/8/2/database-logo-png-favpng-AHZwNuJZ7YW8VpjPxL9xsx9wN.jpg\";\nlet urlChatbox =\"https://www.nicepng.com/png/detail/53-537477_chat-box-logo-chat-box-clip-art.png\";\n\nexport const BasicChallengesInJava = () =>\n                <div className=\"project-grid\">\n                     <ProjectCard\n                        imgmyUrl = {urlDataBase}\n                        cardText=\"Learning Databases and sending,requesting data from java to postgreSQL \"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/databases\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlCashMachine}\n                        cardText=\"Cash machine 2 made through having multiple classes\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/cashMachine2\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlCashMachine}\n                        cardText=\"Cash machine in java\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/CashMachine\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlJavalogo}\n                        cardText=\"Learning Test Driven Development basic by building a calculator by writing tests First and then writing code to pass the tests\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Test-Driven-Development-basic-Learning\"\n                    />\n                     <ProjectCard\n                        imgmyUrl = {urlJavalogo}\n                        cardText=\"Test driven development challenge from code wars more info on github Repo\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Killer-Garage-Door-Challenge\"\n                    />\n                     <ProjectCard\n                        imgmyUrl = {urlChatbox}\n                        cardText=\"Group project of building Chat box application\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Chatbot\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlJavalogo}\n                        cardText=\"Learning java\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/java-practice\"\n                    />\n                     <ProjectCard\n                        imgmyUrl = {urlJavalogo}\n                        cardText=\"rice-Bag-Challenge\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/rice-Bag-Challenge\"\n                    />\n                     <ProjectCard\n                        imgmyUrl = {urlJavalogo}\n                        cardText=\"Learning java syntax\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/java\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlJavalogo}\n                        cardText=\"OOP-in-java in week 1 of learning java\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/OOP-in-java\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlJavalogo}\n                        cardText=\"Function-Challenges from week 1 f leaning java\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Functions-challenges-in-java\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlJavalogo}\n                        cardText=\"Presentation on some basic Java functionality\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/JavaPresentation\"                     \n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlJavalogo}\n                        cardText=\"If-else-Challenges from week 1 of leaning java\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/IfElse-challenges-in-java\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlJavalogo}\n                        cardText=\"Variable-Challenges from week 1 of leaning java\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Variables-Challenges-Java\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlJavalogo}\n                        cardText=\"FizzBuzz-Challenge-In-Java in week 1 of learning java\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/FizzBuzz-Challenge-In-Java\"                     \n                    />\n                </div>","import React from 'react';\nimport ProjectCard from './projectCard';\n\n\nlet urlCalculator=\"https://coopervision.ca/sites/coopervision.ca/files/tc-calculator-icon.png?timestamp=1493161192\"\nlet urlBrickbreaker = \"https://img.favpng.com/10/16/14/brik-extreme-brick-breaking-brik-brick-breaker-super-brick-break-3d-brick-game-png-favpng-4dm5ngz0729B9TCeakTsuETef.jpg\";\nlet urlDataBase=\"https://img.favpng.com/21/8/2/database-logo-png-favpng-AHZwNuJZ7YW8VpjPxL9xsx9wN.jpg\";\nlet urlBooking=\"https://www.systembookings.com/wp-content/uploads/2017/05/System-Bookings-Contact-us-let-us-help-you-build-your-booking-system.png\";\n\nexport const JavaProjects = () =>   \n                    <div className=\"project-grid\">\n                     <ProjectCard\n                    imgmyUrl = {urlBooking}\n                    cardText=\"Goup project of building Room Booking System application with Spring Boot and PostgreSQL database\"                \n                    GithubbuttonText=\"https://github.com/HamadAli248/RoomBookingSystem\"\n                    />  \n                    <ProjectCard\n                    imgmyUrl = {urlBrickbreaker}\n                    cardText=\"Brick-Breaker\"                \n                    GithubbuttonText=\"https://github.com/HamadAli248/Brick-Breaker\"\n                    />  \n                    <ProjectCard\n                        imgmyUrl = {urlCalculator}\n                        cardText=\"Mortgage Calculator calculating Monthlly installments\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/MortgageCalculator-in-java\"\n                        \n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlCalculator}\n                        cardText=\"Calculator built in java\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/calculator-in-java\"\n                    />\n                    <ProjectCard\n                        imgmyUrl = {urlDataBase}\n                        cardText=\"Learning Databases and send,requesting data by APIs from postman\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/Databases-Demo\"\n                    />\n\n                    </div>","import React from 'react';\nimport ProjectCard from './projectCard';\n\nlet urlMongoDB =\"https://www.pngkit.com/png/detail/383-3838914_mongo-db-design-mongodb-logo-mongodb.png\"\nlet urlWeather =\"https://i.pinimg.com/originals/77/0b/80/770b805d5c99c7931366c2e84e88f251.png\"\n\nexport const MongoDb = () =>   \n                    <div className=\"project-grid\">\n                    <ProjectCard\n                    imgmyUrl = {urlWeather}\n                    cardText=\"Weather App\"                \n                    GithubbuttonText=\"https://github.com/HamadAli248/Weather-App\"\n                    />  \n                    <ProjectCard\n                        imgmyUrl = {urlMongoDB}\n                        cardText=\"learning how to connect to MongoDB and adding users into the database\"                \n                        GithubbuttonText=\"https://github.com/HamadAli248/learning-MongoDB\"\n                    />\n\n                    </div>","import React, { Component } from 'react';\nimport { Tabs, Tab , Grid , Cell,Drawer,Layout,Content} from 'react-mdl';\nimport { ReactProjects } from './projectLanuages/ReactProjects';\nimport { VanillaJavaScript } from './projectLanuages/VanillaJavaScript';\nimport { BasicChallenges } from './projectLanuages/BasicChallenges';\nimport { BasicChallengesInJava } from './projectLanuages/BasicChallangesInJava';\nimport {JavaProjects } from './projectLanuages/JavaProjects';\nimport { MongoDb } from './projectLanuages/MongoDB';\nimport { Link } from 'react-router-dom';\n\nclass Projects extends Component {\n    constructor(props){\n        super(props);\n        this.state = { activeTab: 0 };\n    }\n       \n    toggleCategories(){\n            if(this.state.activeTab === 0){\n                return(\n                    <div className=\"all-projects\">\n                        <ReactProjects />\n                        <JavaProjects/>\n                        <VanillaJavaScript />\n                        <MongoDb/>\n                    </div>\n                )\n            }else if(this.state.activeTab === 1){\n                return(\n                <JavaProjects/>              \n                )     \n            }else if(this.state.activeTab === 2){\n                return(\n                    < ReactProjects />\n                )\n            }else if(this.state.activeTab === 3){\n                return(\n                    <MongoDb/>\n                )\n            }\n            else if(this.state.activeTab === 4){\n                return(\n                    <VanillaJavaScript />\n                )\n            }else if(this.state.activeTab === 5){\n                return(\n                    <BasicChallenges />               \n                )\n            }\n            else if(this.state.activeTab === 6){\n                return(\n                <BasicChallengesInJava />\n                )\n            }\n    }\n   \n    \n    render() {\n        \n        return(\n            <div>\n                <div className=\"category-tabs\">\n                    <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({activeTab:tabId})} ripple>\n                    <Tab>All Projects</Tab>\n                    <Tab>Java</Tab>\n                    <Tab>React</Tab>\n                    <Tab>MongoDB</Tab>\n                    <Tab>Vanilla Javascript</Tab>\n                    <Tab>Basic Challenges Javascript</Tab>\n                    <Tab>Basic Challenges Java</Tab>\n                    </Tabs>\n                        <Grid >\n                            <Cell col={12}>\n                                <div className=\"content\">{this.toggleCategories()}</div>\n                            </Cell>\n                        </Grid>\n                </div>\n                <div className=\"category-tabs-select\">\n                <Layout>\n                        <Drawer >\n                            <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({activeTab:tabId})} ripple>\n                                <Tab>All Projects</Tab>\n                                <Tab>Java</Tab>\n                                <Tab>React</Tab>\n                                <Tab>MongoDB</Tab>\n                                <Tab>Vanilla Javascript</Tab>\n                                <Tab>Basic Challenges Javascript</Tab>\n                                <Tab>Basic Challenges Java</Tab>\n                            </Tabs>\n                        </Drawer>\n                        <Content>\n                            <Grid >\n                                <Cell col={12}>\n                                    <div className=\"content\">{this.toggleCategories()}</div>\n                                </Cell>\n                            </Grid>\n                        </Content>\n                        </Layout>\n              </div>\n                {/* <div className=\"category-tabs-select\">\n                    <select activeoption={this.state.activeoption} onChange={(optionId) => this.setState({activeoption:optionId})}>\n                        <option>All Projects</option>\n                        <option>Java</option>\n                        <option>React</option>\n                        <option>MongoDB</option>\n                        <option>Vanilla Javascript</option>\n                        <option>Basic Challenges Javascript</option>\n                        <option>Basic Challenges Java</option> \n                    </select>\n                    <Grid >\n                            <Cell col={12}>\n                                <div className=\"content\">{this.toggleCategories()}</div>\n                            </Cell>\n                        </Grid>\n                </div> */}\n            </div>\n            )\n    }        \n}\nexport default Projects;\n\n\n     \n","import React from 'react';\nimport { Switch,Route } from 'react-router-dom';\nimport LandingPage from './landingpage';\nimport AboutMe from './aboutme';\nimport Contact from './contactme';\nimport Project from './projects';\nimport Resume from './resume';\n\n\nconst Main = () => (\n\n    // main to add all the rouding to different paths from the URL\n    <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route exact path=\"/react-portfolio\" component={LandingPage} />\n        <Route path=\"/aboutme\" component={AboutMe} />\n        <Route path=\"/contactme\" component={Contact} />\n        <Route path=\"/projects\" component={Project} />\n        <Route path=\"/resume\" component={Resume} />\n    </Switch>\n)\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content} from 'react-mdl';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\nimport CV from './HamadAliCV.pdf';\nimport landingPage from './components/landingpage';\n\n\nfunction App() {\n  return (\n          // main page (getting the home page) and links to other pages \n      <div className=\"demo-big-content\">\n          {landingPage}\n          <Layout>\n              <Header className=\"header-color\" title={<Link style={{textDecoration: 'none', color:'white'}} to=\"/react-portfolio/\">MyPortfolio</Link>} scroll>\n                  <Navigation>\n                      <Link to={CV} target=\"_blank\">Resume</Link>\n                      <Link to=\"/aboutme\">About Me</Link>\n                      <Link to=\"/projects\">Projects</Link>\n                      <Link to=\"/contactme\">Contact</Link>\n                  </Navigation>\n              </Header>\n              <Drawer title={<Link style={{textDecoration: 'none', color:'black'}} to=\"/react-portfolio/\">MyPortfolio</Link>}>\n                  <Navigation>\n                  <Link to={CV} target=\"_blank\">Resume</Link>\n                      <Link to=\"/aboutme\">About Me</Link>\n                      <Link to=\"/projects\">Projects</Link>\n                      <Link to=\"/contactme\">Contact</Link>\n                  </Navigation>\n              </Drawer>\n              <Content>\n                  <div className=\"page-content\"></div>\n                  < Main />\n              </Content>\n          </Layout>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/GBuster.d4af090a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/HamadAliCV.dda9db53.pdf\";"],"sourceRoot":""}